# https://github.com/jesseduffield/lazygit/blob/master/docs/Config.md
# https://github.com/jesseduffield/lazygit/blob/master/docs/Custom_Command_Keybindings.md
gui:
  windowSize: "full" # one of 'normal' | 'half' | 'full' default is 'normal'
  timeFormat: "02 Jan 06 15:04 MST" # https://pkg.go.dev/time#Time.Format
  branchColors:
    "master": "#1abc9c"
    "assets": "#737aa2"
    "docs": "#bb9af7"
    "develop": "#82aaff"
    "release": "#0db9d7"
    "test": "#db4b4b"
    "feature": "#b4f9f8"
    "to-do": "#646DA4"
  authorColors:
    "*": "#636da6"
  showIcons: true
  theme:
    selectedLineBgColor:
      - "#51566F" # set to `default` to have no background color
git:
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=format:medium --oneline {{branchName}} --"
  skipHookPrefix: WIP
  parseEmoji: true
customCommands:
  - key: "L"
    command: "git {{if .SelectedFile.HasUnstagedChanges}} diff --color {{.SelectedFile.Name}} {{else}} diff --staged --color {{.SelectedFile.Name}} {{end}} "
    context: "files"
    description: "Open git diff with subprocess"
    subprocess: true
  - key: "l"
    command: "git {{if .SelectedFile.HasUnstagedChanges}} diff --color {{.SelectedFile.Name}} {{else}} diff --staged --color {{.SelectedFile.Name}} {{end}} "
    context: "files"
    description: "Open git diff with prompt"
    showOutput: true
  - key: "<c-d>"
    command: "git fetch && git checkout develop"
    context: "localBranches"
    description: "Fetch and checkout develop branch"
  - key: "L"
    command: "git log --graph --abbrev-commit --decorate --date=relative --pretty=format:medium --oneline --color {{.SelectedLocalBranch.Name}}"
    context: "localBranches"
    description: "Open git log with subprocess"
    subprocess: true
  - key: "l"
    command: "git log --graph --abbrev-commit --decorate --date=relative --pretty=format:medium --oneline --color {{.SelectedLocalBranch.Name}}"
    context: "localBranches"
    description: "Open git log with prompt"
    showOutput: true
  - key: "L"
    command: "git show --pretty=fuller --color {{.SelectedLocalCommit.Sha}}"
    context: "commits"
    description: "Open git log with subprocess"
    subprocess: true
  - key: "l"
    command: "git show --pretty=fuller --color {{.SelectedLocalCommit.Sha}}"
    context: "commits"
    description: "Open git log with prompt"
    showOutput: true
  - key: "<c-r>"
    command: 'hub browse -- "commit/{{.SelectedLocalCommit.Sha}}"'
    context: "commits"
  - key: "a"
    command: "git {{if .SelectedFile.HasUnstagedChanges}} add {{else}} reset {{end}} {{.SelectedFile.Name | quote}}"
    context: "files"
    description: "toggle file staged"
  - key: "<c-c>"
    command: 'git log {{.SelectedLocalBranch.Name}}..HEAD --oneline --ancestry-path --merges --pretty=format:"%h - %s" | grep -E "\(#\d+\)" | sed "s/^[0-9a-f]* //" | pbcopy'
    description: "Copy all merged commits messages with ticket number"
    context: "localBranches"
  - key: "<c-x>"
    command: 'git log {{.SelectedLocalBranch.Name}}..HEAD --oneline --ancestry-path --merges --pretty=format:"%h - %s" | sed "s/^[0-9a-f]* //" | pbcopy'
    description: "Copy all merged commits messages"
    context: "localBranches"
  - key: "C"
    command: "git commit"
    context: "global"
    subprocess: true
  - key: "r"
    command: "git submodule update --remote"
    context: "submodules"
    description: "update remote submodule"
  - key: "<c-f>"
    command: "git fetch --prune origin"
    context: "localBranches"
    loadingText: "Pruning..."
    description: "fetch prune origin"
  - key: "i"
    command: "git rebase -i {{.SelectedLocalCommit.Sha}}"
    context: "commits"
    loadingText: "Rebasing..."
    description: "Interactive rebase with editor starting from the next commit"
    subprocess: true
  - key: "I"
    command: "git rebase -i {{.SelectedLocalCommit.Sha}}~1"
    context: "commits"
    loadingText: "Rebasing..."
    description: "Interactive rebase with editor starting from the current commit"
    subprocess: true
  - key: "r"
    command: "git rebase {{index .PromptResponses 0}} {{.SelectedLocalBranch.Name}}"
    context: "localBranches"
    description: "Rebase options"
    loadingText: "Rebasing branch..."
    prompts:
      - type: "menu"
        title: "How would like to rebase?"
        options:
          - name: "rebase merge"
            description: "     Preserve merge commits"
            value: "--rebase-merges"
          - name: "rebase"
            description: "     Without preserving merge commits"
            value: ""

  - key: "N"
    description: "Create local wip branch"
    command: "git branch {{if index .PromptResponses 0}}{{index .PromptResponses 0}}/{{end}}{{index .PromptResponses 1}}"
    context: "localBranches"
    loadingText: "Creating branch..."
    prompts:
      - type: "menu"
        title: "What kind of branch is it?"
        options:
          - name: "feature"
            description: "   a feature branch"
            value: "feature"
          - name: "hotfix"
            description: "   a hotfix branch"
            value: "hotfix"
          - name: "release"
            description: "   a release branch"
            value: "release"
          - name: "develop"
            description: "   a develop branch"
            value: "develop"
          - name: "to-do"
            description: "   a to-do branch. Local only"
            value: "to-do"
      - type: "input"
        title: "What is the description of branch?"
        initialValue: ""
  - key: "D"
    description: "Remove a branch description"
    command: "git config --unset branch.{{.SelectedLocalBranch.Name}}.description"
    context: "localBranches"
    loadingText: "Removing description..."
    prompts:
      - type: "confirm"
        title: "Confirm:"
        body: "Are you sure you want to remove description?"
  - key: "e"
    description: "Add/edit a branch description"
    command: "git branch --edit-description {{.SelectedLocalBranch.Name}}"
    context: "localBranches"
    loadingText: "Opening editor..."
    subprocess: true
  - key: "s"
    description: "show branch description"
    command: "git config branch.{{.SelectedLocalBranch.Name}}.description"
    context: "localBranches"
    showOutput: true
  - key: "r"
    description: "Checkout a remote branch as FETCH_HEAD"
    command: "git fetch {{index .PromptResponses 0}} {{index .PromptResponses 1}} && git checkout FETCH_HEAD"
    context: "remotes"
    prompts:
      - type: "input"
        title: "Remote:"
        initialValue: "{{index .SelectedRemote.Name }}"
      - type: "menuFromCommand"
        title: "Remote branch:"
        command: "git branch  -r --list {{index .PromptResponses 0}}/*"
        filter: ".*{{index .PromptResponses 0}}/(?P<branch>.*)"
        valueFormat: "{{ .branch }}"
        labelFormat: "{{ .branch | green }}"
  - key: "<f1>"
    command: "git reset --soft {{.CheckedOutBranch.UpstreamRemote}}"
    context: "files"
    prompts:
      - type: "confirm"
        title: "Confirm:"
        body: "Are you sure you want to reset HEAD to {{.CheckedOutBranch.UpstreamRemote}}?"
